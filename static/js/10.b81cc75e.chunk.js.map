{"version":3,"sources":["components/Produce/QueryForm.js","pages/Produce/Employee.js"],"names":["create","form","queryItems","queryRecord","addRecord","batchRecord","deleteRecord","exportExcel","handleExport","validateFields","err","values","formButtons","text","handerClick","type","resetFields","itemCommonProps","handleBlur","e","setFieldsValue","target","id","value","trim","layout","formItems","renderTailPart","map","button","key","style","marginRight","onClick","className","moduleName","moduleCnName","name","displayName","selectOptions","options","initialValue","addItems","rules","required","message","radioOptions","connect","state","employee","dispatch","list","pageInfo","record","loading","pageRole","batchOrder","useState","modalVisible","setModalVisible","selectedRows","setSelectedRows","current","pageSize","showSizeChanger","showTotal","total","pagination","setPagination","queryParams","setQueryParams","formRef","useRef","records","length","ids","join","confirm","content","onOk","payload","then","refreshPage","okText","cancelText","error","useEffect","pageNo","rowSelection","onChange","_","columns","title","dataIndex","width","queryFormProps","push","render","1","2","moment","format","size","editRecord","margin","unshift","extProps","birthdate","ref","tip","spinning","bordered","rowKey","dataSource","curPageInfo","onCancel","visible","footer","saveRecord"],"mappings":"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","file":"static/js/10.b81cc75e.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Form, Button } from 'antd'\r\n\r\nimport CommonForm from './CommonForm'\r\nimport './index.css'\r\n\r\nfunction QueryForm({ form, queryItems = [], queryRecord, addRecord, batchRecord, deleteRecord, exportExcel }) {\r\n  function query() {\r\n    form.validateFields((err, values) => {\r\n      if (err) {\r\n        return\r\n      }\r\n\r\n      queryRecord(values)\r\n    })\r\n  }\r\n\r\n  function handleExport() {\r\n    form.validateFields((err, values) => {\r\n      if (err) {\r\n        return\r\n      }\r\n\r\n      exportExcel(values)\r\n    })\r\n  }\r\n\r\n  function reset() {\r\n    form.resetFields()\r\n  }\r\n\r\n  const formButtons = [\r\n    {\r\n      text: '查询',\r\n      handerClick: query,\r\n      type: 'primary',\r\n    },\r\n    {\r\n      text: '重置',\r\n      handerClick: reset,\r\n    },\r\n  ]\r\n\r\n  const itemCommonProps = {\r\n    handleBlur: e => {\r\n      form.setFieldsValue({ [e.target.id]: e.target.value.trim() })\r\n    },\r\n  }\r\n\r\n  return (\r\n    <CommonForm\r\n      layout=\"inline\"\r\n      form={form}\r\n      formItems={queryItems}\r\n      itemCommonProps={itemCommonProps}\r\n      renderTailPart={() => (\r\n        <div>\r\n          {formButtons.map(button => (\r\n            <Button key={button.text} type={button.type} style={{ marginRight: 16 }} onClick={button.handerClick}>\r\n              {button.text}\r\n            </Button>\r\n          ))}\r\n          {addRecord && (\r\n            <Button type=\"primary\" style={{ marginRight: 16 }} onClick={addRecord}>\r\n              新增\r\n            </Button>\r\n          )}\r\n          {batchRecord && (\r\n            <Button className=\"btn-orange\" style={{ marginRight: 16 }} onClick={batchRecord}>\r\n              批量管理\r\n            </Button>\r\n          )}\r\n          {deleteRecord && (\r\n            <Button className=\"btn-orange\" style={{ marginRight: 16 }} onClick={deleteRecord}>\r\n              批量删除\r\n            </Button>\r\n          )}\r\n          {exportExcel && (\r\n            <Button className=\"btn-orange\" style={{ marginRight: 16 }} onClick={handleExport}>\r\n              导出Excel\r\n            </Button>\r\n          )}\r\n        </div>\r\n      )}\r\n    />\r\n  )\r\n}\r\n\r\nexport default Form.create()(QueryForm)\r\n","import React, { useEffect, useState, useRef } from 'react'\r\nimport { Card, Table, Modal, Button, Spin, message } from 'antd'\r\nimport { connect } from 'dva'\r\nimport moment from 'moment'\r\n\r\nimport QueryForm from '../../components/Produce/QueryForm'\r\nimport EditForm from '../../components/Produce/EditForm'\r\n\r\nconst moduleName = 'employee'\r\nconst moduleCnName = '员工'\r\n\r\nconst queryItems = [\r\n  {\r\n    type: 'input',\r\n    name: 'id',\r\n    displayName: '车工ID',\r\n  },\r\n  {\r\n    type: 'input',\r\n    name: 'employeeName',\r\n    displayName: '车工姓名',\r\n  },\r\n  {\r\n    type: 'input',\r\n    name: 'telephone',\r\n    displayName: '联系电话',\r\n  },\r\n  {\r\n    type: 'select',\r\n    name: 'employeeRole',\r\n    displayName: '车工角色',\r\n    selectOptions: [\r\n      {\r\n        text: '全部',\r\n        value: '',\r\n      },\r\n      {\r\n        text: '普通车工',\r\n        value: '普通车工',\r\n      },\r\n      {\r\n        text: '熟手',\r\n        value: '熟手',\r\n      },\r\n    ],\r\n    options: {\r\n      initialValue: '',\r\n    },\r\n  },\r\n]\r\n\r\nconst addItems = [\r\n  {\r\n    type: 'input',\r\n    name: 'employeeName',\r\n    displayName: '车工姓名',\r\n    options: {\r\n      rules: [\r\n        {\r\n          required: true,\r\n          message: '请输入车工姓名',\r\n        },\r\n      ],\r\n    },\r\n  },\r\n  {\r\n    type: 'select',\r\n    name: 'employeeRole',\r\n    displayName: '车工角色',\r\n    selectOptions: [\r\n      {\r\n        text: '普通车工',\r\n        value: '普通车工',\r\n      },\r\n      {\r\n        text: '熟手',\r\n        value: '熟手',\r\n      },\r\n    ],\r\n    options: {\r\n      initialValue: '普通车工',\r\n    },\r\n  },\r\n  {\r\n    type: 'radio',\r\n    name: 'gender',\r\n    displayName: '性别',\r\n    radioOptions: [\r\n      {\r\n        text: '男',\r\n        value: 1,\r\n      },\r\n      {\r\n        text: '女',\r\n        value: 2,\r\n      },\r\n    ],\r\n    options: {\r\n      initialValue: 1,\r\n    },\r\n  },\r\n  {\r\n    type: 'datepicker',\r\n    name: 'birthdate',\r\n    displayName: '出生日期',\r\n  },\r\n  {\r\n    type: 'input',\r\n    name: 'telephone',\r\n    displayName: '联系电话',\r\n    options: {\r\n      rules: [\r\n        {\r\n          required: true,\r\n          message: '请输入车工联系电话',\r\n        },\r\n      ],\r\n    },\r\n  },\r\n]\r\n\r\nfunction Employee({ dispatch, list, pageInfo, record, loading, pageRole, batchOrder }) {\r\n  const [modalVisible, setModalVisible] = useState(false)\r\n  const [selectedRows, setSelectedRows] = useState([])\r\n  const [pagination, setPagination] = useState({\r\n    current: 1,\r\n    pageSize: 10,\r\n    showSizeChanger: true,\r\n    showTotal,\r\n  })\r\n  const [queryParams, setQueryParams] = useState({})\r\n  const formRef = useRef()\r\n\r\n  useEffect(() => {\r\n    dispatch({\r\n      type: `${moduleName}/fetchList`,\r\n      payload: {\r\n        pageNo: pagination.current,\r\n        pageSize: pagination.pageSize,\r\n      },\r\n    })\r\n  }, [dispatch, pagination])\r\n\r\n  // 查询\r\n  function queryRecord(values) {\r\n    const payload = { ...values, pageNo: 1, pageSize: pagination.pageSize }\r\n    setQueryParams(payload)\r\n\r\n    dispatch({\r\n      type: `${moduleName}/fetchList`,\r\n      payload,\r\n    })\r\n  }\r\n\r\n  function tableChange(pageInfo) {\r\n    const curPageInfo = { ...pagination, ...pageInfo }\r\n    setPagination(curPageInfo)\r\n\r\n    const payload = {\r\n      ...queryParams,\r\n      pageNo: curPageInfo.current,\r\n      pageSize: curPageInfo.pageSize,\r\n    }\r\n    setQueryParams(payload)\r\n\r\n    dispatch({\r\n      type: `${moduleName}/fetchList`,\r\n      payload,\r\n    })\r\n  }\r\n\r\n  // 新增&修改\r\n  function addRecord() {\r\n    setModalVisible(true)\r\n  }\r\n\r\n  function editRecord(record) {\r\n    dispatch({\r\n      type: `${moduleName}/getRecord`,\r\n      payload: {\r\n        id: record.id,\r\n      },\r\n    }).then(() => {\r\n      setModalVisible(true)\r\n    })\r\n  }\r\n\r\n  function saveRecord(values) {\r\n    const payload = { ...values, birthdate: values.birthdate.format('YYYY-MM-DD') }\r\n\r\n    dispatch({\r\n      type: `${moduleName}/updateRecord`,\r\n      payload,\r\n    }).then(() => {\r\n      setModalVisible(false)\r\n      refreshPage()\r\n    })\r\n  }\r\n\r\n  // 删除(支持批量)\r\n  function deleteRecord(records = []) {\r\n    if (!records.length) {\r\n      message.error('请选择至少一个删除选项')\r\n      return\r\n    }\r\n\r\n    const ids = records.map(record => record.id).join()\r\n\r\n    Modal.confirm({\r\n      content: `确认要删除${moduleCnName}`,\r\n      onOk: () => {\r\n        dispatch({\r\n          type: `${moduleName}/batchDelete`,\r\n          payload: {\r\n            type: 1,\r\n            ids,\r\n          },\r\n        }).then(() => refreshPage())\r\n      },\r\n      okText: '确认',\r\n      cancelText: '取消',\r\n    })\r\n  }\r\n\r\n  function handleCancel() {\r\n    dispatch({\r\n      type: `${moduleName}/saveRecord`,\r\n      payload: {},\r\n    })\r\n    setModalVisible(false)\r\n  }\r\n\r\n  function refreshPage() {\r\n    setPagination({ ...pagination, current: 1 })\r\n\r\n    dispatch({\r\n      type: `${moduleName}/saveRecord`,\r\n      payload: {},\r\n    })\r\n    formRef.current.resetFields()\r\n  }\r\n\r\n  function showTotal(total) {\r\n    return `共 ${total} 条记录`\r\n  }\r\n\r\n  const rowSelection = {\r\n    onChange: (_, selectedRows) => {\r\n      setSelectedRows(selectedRows)\r\n    },\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      title: '车工ID',\r\n      dataIndex: 'id',\r\n      key: 'id',\r\n      width: 100,\r\n    },\r\n    {\r\n      title: '车工姓名',\r\n      dataIndex: 'employeeName',\r\n      key: 'employeeName',\r\n      width: 120,\r\n    },\r\n    {\r\n      title: '车工角色',\r\n      dataIndex: 'employeeRole',\r\n      key: 'employeeRole',\r\n      width: 100,\r\n    },\r\n    {\r\n      title: '联系电话',\r\n      dataIndex: 'telephone',\r\n      key: 'telephone',\r\n      width: 160,\r\n    },\r\n  ]\r\n\r\n  const queryFormProps = {}\r\n\r\n  if (pageRole !== 'order') {\r\n    queryFormProps.addRecord = addRecord\r\n    queryFormProps.deleteRecord = () => deleteRecord(selectedRows)\r\n    columns.push(\r\n      ...[\r\n        {\r\n          title: '性别',\r\n          dataIndex: 'gender',\r\n          key: 'gender',\r\n          width: 60,\r\n          render: text => {\r\n            const valueMap = {\r\n              1: '男',\r\n              2: '女',\r\n            }\r\n\r\n            return valueMap[text]\r\n          },\r\n        },\r\n        {\r\n          title: '出生日期',\r\n          dataIndex: 'birthdate',\r\n          key: 'birthdate',\r\n          width: 120,\r\n        },\r\n        {\r\n          title: '创建时间',\r\n          dataIndex: 'createTime',\r\n          key: 'createTime',\r\n          width: 120,\r\n          render: text => {\r\n            return moment(text).format('YYYY-MM-DD HH:mm:SS')\r\n          },\r\n        },\r\n        {\r\n          title: '修改时间',\r\n          dataIndex: 'updateTime',\r\n          key: 'updateTime',\r\n          width: 120,\r\n          render: text => {\r\n            return moment(text).format('YYYY-MM-DD HH:mm:SS')\r\n          },\r\n        },\r\n        {\r\n          title: '操作',\r\n          dataIndex: 'operation',\r\n          key: 'operation',\r\n          width: 150,\r\n          render: (_, record) => {\r\n            return (\r\n              <>\r\n                <Button type=\"primary\" size=\"small\" onClick={() => editRecord(record)} style={{ margin: 5 }}>\r\n                  修改\r\n                </Button>\r\n                <Button type=\"primary\" size=\"small\" onClick={() => deleteRecord([record])}>\r\n                  删除\r\n                </Button>\r\n              </>\r\n            )\r\n          },\r\n        },\r\n      ]\r\n    )\r\n  } else {\r\n    columns.unshift({\r\n      title: '订单操作',\r\n      dataIndex: 'operation',\r\n      key: 'operation',\r\n      width: 100,\r\n      render: (_, record) => {\r\n        return (\r\n          <>\r\n            <Button type=\"primary\" size=\"small\" onClick={() => batchOrder(record)} style={{ marginRight: 10 }}>\r\n              管理订单\r\n            </Button>\r\n          </>\r\n        )\r\n      },\r\n    })\r\n    columns.push({})\r\n  }\r\n\r\n  const extProps = {}\r\n\r\n  if (pageRole !== 'order') {\r\n    extProps['rowSelection'] = rowSelection\r\n  }\r\n\r\n  record.birthdate = moment(record.birthdate)\r\n\r\n  return (\r\n    <Card>\r\n      <QueryForm ref={formRef} queryItems={queryItems} queryRecord={queryRecord} {...queryFormProps} />\r\n      <Spin tip=\"努力加载中...\" spinning={loading.list}>\r\n        <Table\r\n          size=\"small\"\r\n          bordered\r\n          rowKey=\"id\"\r\n          dataSource={list}\r\n          columns={columns}\r\n          onChange={tableChange}\r\n          pagination={{ ...pagination, total: pageInfo.total }}\r\n          {...extProps}\r\n        />\r\n      </Spin>\r\n      <Modal title={`编辑${moduleCnName}`} width={800} onCancel={handleCancel} visible={modalVisible} footer={null}>\r\n        <EditForm addItems={addItems} record={record} saveRecord={saveRecord} />\r\n      </Modal>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default connect(state => ({\r\n  ...state.employee,\r\n}))(Employee)\r\n"],"sourceRoot":""}