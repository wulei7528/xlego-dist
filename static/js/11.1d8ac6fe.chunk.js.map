{"version":3,"sources":["components/Produce/QueryForm.js","pages/Produce/Flow.js"],"names":["create","form","queryItems","queryRecord","addRecord","batchRecord","deleteRecord","exportExcel","handleExport","validateFields","err","values","formButtons","text","handerClick","type","resetFields","itemCommonProps","handleBlur","e","setFieldsValue","target","id","value","trim","layout","formItems","renderTailPart","map","button","key","style","marginRight","onClick","className","moduleName","moduleCnName","name","displayName","addItems","options","rules","required","message","transform","Number","connect","state","flow","dispatch","list","pageInfo","record","loading","useState","modalVisible","setModalVisible","selectedRows","setSelectedRows","current","pageSize","showSizeChanger","showTotal","total","pagination","setPagination","queryParams","setQueryParams","formRef","useRef","records","length","ids","join","confirm","content","color","onOk","payload","then","refreshPage","okText","cancelText","error","useEffect","pageNo","rowSelection","onChange","_","columns","title","dataIndex","render","moment","format","size","editRecord","ref","tip","spinning","dataSource","bordered","rowKey","curPageInfo","width","onCancel","visible","footer","saveRecord"],"mappings":"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","file":"static/js/11.1d8ac6fe.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Form, Button } from 'antd'\r\n\r\nimport CommonForm from './CommonForm'\r\nimport './index.css'\r\n\r\nfunction QueryForm({ form, queryItems = [], queryRecord, addRecord, batchRecord, deleteRecord, exportExcel }) {\r\n  function query() {\r\n    form.validateFields((err, values) => {\r\n      if (err) {\r\n        return\r\n      }\r\n\r\n      queryRecord(values)\r\n    })\r\n  }\r\n\r\n  function handleExport() {\r\n    form.validateFields((err, values) => {\r\n      if (err) {\r\n        return\r\n      }\r\n\r\n      exportExcel(values)\r\n    })\r\n  }\r\n\r\n  function reset() {\r\n    form.resetFields()\r\n  }\r\n\r\n  const formButtons = [\r\n    {\r\n      text: '查询',\r\n      handerClick: query,\r\n      type: 'primary',\r\n    },\r\n    {\r\n      text: '重置',\r\n      handerClick: reset,\r\n    },\r\n  ]\r\n\r\n  const itemCommonProps = {\r\n    handleBlur: e => {\r\n      form.setFieldsValue({ [e.target.id]: e.target.value.trim() })\r\n    },\r\n  }\r\n\r\n  return (\r\n    <CommonForm\r\n      layout=\"inline\"\r\n      form={form}\r\n      formItems={queryItems}\r\n      itemCommonProps={itemCommonProps}\r\n      renderTailPart={() => (\r\n        <div>\r\n          {formButtons.map(button => (\r\n            <Button key={button.text} type={button.type} style={{ marginRight: 16 }} onClick={button.handerClick}>\r\n              {button.text}\r\n            </Button>\r\n          ))}\r\n          {addRecord && (\r\n            <Button type=\"primary\" style={{ marginRight: 16 }} onClick={addRecord}>\r\n              新增\r\n            </Button>\r\n          )}\r\n          {batchRecord && (\r\n            <Button className=\"btn-orange\" style={{ marginRight: 16 }} onClick={batchRecord}>\r\n              批量管理\r\n            </Button>\r\n          )}\r\n          {deleteRecord && (\r\n            <Button className=\"btn-orange\" style={{ marginRight: 16 }} onClick={deleteRecord}>\r\n              批量删除\r\n            </Button>\r\n          )}\r\n          {exportExcel && (\r\n            <Button className=\"btn-orange\" style={{ marginRight: 16 }} onClick={handleExport}>\r\n              导出Excel\r\n            </Button>\r\n          )}\r\n        </div>\r\n      )}\r\n    />\r\n  )\r\n}\r\n\r\nexport default Form.create()(QueryForm)\r\n","import React, { useEffect, useState, useRef } from 'react'\r\nimport { Card, Table, Modal, Button, Spin, message } from 'antd'\r\nimport { connect } from 'dva'\r\nimport moment from 'moment'\r\n\r\nimport QueryForm from '../../components/Produce/QueryForm'\r\nimport EditForm from '../../components/Produce/EditForm'\r\n\r\nconst moduleName = 'flow'\r\nconst moduleCnName = '工序'\r\n\r\nconst queryItems = [\r\n  {\r\n    type: 'input',\r\n    name: 'id',\r\n    displayName: '工序ID',\r\n  },\r\n  {\r\n    type: 'input',\r\n    name: 'flowName',\r\n    displayName: '工序名',\r\n  },\r\n]\r\n\r\nconst addItems = [\r\n  {\r\n    type: 'input',\r\n    name: 'flowName',\r\n    displayName: '工序名',\r\n    options: {\r\n      rules: [\r\n        {\r\n          required: true,\r\n          message: '请输入工序名称',\r\n        },\r\n      ],\r\n    },\r\n  },\r\n  {\r\n    type: 'input',\r\n    name: 'flowDesc',\r\n    displayName: '工序描述说明',\r\n  },\r\n  {\r\n    type: 'input',\r\n    name: 'price',\r\n    displayName: '工序价格',\r\n    options: {\r\n      rules: [\r\n        {\r\n          required: true,\r\n          message: '请输入工序价格',\r\n        },\r\n        {\r\n          type: 'number',\r\n          message: '数字',\r\n          transform: value => {\r\n            return Number(value)\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  },\r\n]\r\n\r\nfunction Flow({ dispatch, list, pageInfo, record, loading }) {\r\n  const [modalVisible, setModalVisible] = useState(false)\r\n  const [selectedRows, setSelectedRows] = useState([])\r\n  const [pagination, setPagination] = useState({\r\n    current: 1,\r\n    pageSize: 10,\r\n    showSizeChanger: true,\r\n    showTotal,\r\n  })\r\n  const [queryParams, setQueryParams] = useState({})\r\n  const formRef = useRef()\r\n\r\n  useEffect(() => {\r\n    dispatch({\r\n      type: `${moduleName}/fetchList`,\r\n      payload: {\r\n        pageNo: pagination.current,\r\n        pageSize: pagination.pageSize,\r\n      },\r\n    })\r\n  }, [dispatch, pagination])\r\n\r\n  // 查询\r\n  function queryRecord(values) {\r\n    const payload = { ...values, pageNo: 1, pageSize: pagination.pageSize }\r\n    setQueryParams(payload)\r\n\r\n    dispatch({\r\n      type: `${moduleName}/fetchList`,\r\n      payload,\r\n    })\r\n  }\r\n\r\n  function tableChange(pageInfo) {\r\n    const curPageInfo = { ...pagination, ...pageInfo }\r\n    setPagination(curPageInfo)\r\n\r\n    const payload = {\r\n      ...queryParams,\r\n      pageNo: curPageInfo.current,\r\n      pageSize: curPageInfo.pageSize,\r\n    }\r\n    setQueryParams(payload)\r\n\r\n    dispatch({\r\n      type: `${moduleName}/fetchList`,\r\n      payload,\r\n    })\r\n  }\r\n\r\n  // 新增&修改\r\n  function addRecord() {\r\n    setModalVisible(true)\r\n  }\r\n\r\n  function editRecord(record) {\r\n    dispatch({\r\n      type: `${moduleName}/getRecord`,\r\n      payload: {\r\n        id: record.id,\r\n      },\r\n    }).then(() => {\r\n      setModalVisible(true)\r\n    })\r\n  }\r\n\r\n  function saveRecord(values) {\r\n    dispatch({\r\n      type: `${moduleName}/updateRecord`,\r\n      payload: values,\r\n    }).then(() => {\r\n      setModalVisible(false)\r\n      refreshPage()\r\n    })\r\n  }\r\n\r\n  // 删除(支持批量)\r\n  function deleteRecord(records = []) {\r\n    if (!records.length) {\r\n      message.error('请选择至少一个删除选项')\r\n      return\r\n    }\r\n\r\n    const ids = records.map(record => record.id).join()\r\n\r\n    Modal.confirm({\r\n      content: (\r\n        <div>\r\n          确认要删除{moduleCnName}？<div style={{ color: 'red' }}>删除工序操作会影响所有关联的员工订单，请慎重操作！</div>\r\n        </div>\r\n      ),\r\n      onOk: () => {\r\n        dispatch({\r\n          type: `${moduleName}/batchDelete`,\r\n          payload: {\r\n            type: 2,\r\n            ids,\r\n          },\r\n        }).then(() => refreshPage())\r\n      },\r\n      okText: '确认',\r\n      cancelText: '取消',\r\n    })\r\n  }\r\n\r\n  function refreshPage() {\r\n    setPagination({ ...pagination, current: 1 })\r\n\r\n    dispatch({\r\n      type: `${moduleName}/saveRecord`,\r\n      payload: {},\r\n    })\r\n    formRef.current.resetFields()\r\n  }\r\n\r\n  function showTotal(total) {\r\n    return `共 ${total} 条记录`\r\n  }\r\n\r\n  function handleCancel() {\r\n    setModalVisible(false)\r\n  }\r\n\r\n  const rowSelection = {\r\n    onChange: (_, selectedRows) => {\r\n      setSelectedRows(selectedRows)\r\n    },\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      title: '工序ID',\r\n      dataIndex: 'id',\r\n      key: 'id',\r\n    },\r\n    {\r\n      title: '工序名',\r\n      dataIndex: 'flowName',\r\n      key: 'flowName',\r\n    },\r\n    {\r\n      title: '工序描述说明',\r\n      dataIndex: 'flowDesc',\r\n      key: 'flowDesc',\r\n    },\r\n    {\r\n      title: '工序最新价格',\r\n      dataIndex: 'price',\r\n      key: 'price',\r\n    },\r\n    {\r\n      title: '创建时间',\r\n      dataIndex: 'createTime',\r\n      key: 'createTime',\r\n      render: text => {\r\n        return moment(text).format('YYYY-MM-DD HH:mm:SS')\r\n      },\r\n    },\r\n    {\r\n      title: '修改时间',\r\n      dataIndex: 'updateTime',\r\n      key: 'updateTime',\r\n      render: text => {\r\n        return moment(text).format('YYYY-MM-DD HH:mm:SS')\r\n      },\r\n    },\r\n    {\r\n      title: '操作',\r\n      dataIndex: 'operation',\r\n      key: 'operation',\r\n      render: (_, record) => {\r\n        return (\r\n          <>\r\n            <Button type=\"primary\" size=\"small\" onClick={() => editRecord(record)} style={{ marginRight: 10 }}>\r\n              修改\r\n            </Button>\r\n            <Button type=\"primary\" size=\"small\" onClick={() => deleteRecord([record])}>\r\n              删除\r\n            </Button>\r\n          </>\r\n        )\r\n      },\r\n    },\r\n  ]\r\n\r\n  return (\r\n    <Card>\r\n      <QueryForm\r\n        ref={formRef}\r\n        queryItems={queryItems}\r\n        addRecord={addRecord}\r\n        queryRecord={queryRecord}\r\n        deleteRecord={() => deleteRecord(selectedRows)}\r\n      />\r\n      <Spin tip=\"努力加载中...\" spinning={loading.list}>\r\n        <Table\r\n          size=\"small\"\r\n          dataSource={list}\r\n          columns={columns}\r\n          rowSelection={rowSelection}\r\n          bordered\r\n          rowKey=\"id\"\r\n          onChange={tableChange}\r\n          pagination={{ ...pagination, total: pageInfo.total }}\r\n        />\r\n      </Spin>\r\n      <Modal title={`编辑${moduleCnName}`} width={800} onCancel={handleCancel} visible={modalVisible} footer={null}>\r\n        <EditForm addItems={addItems} record={record} saveRecord={saveRecord} />\r\n      </Modal>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default connect(state => ({\r\n  ...state.flow,\r\n}))(Flow)\r\n"],"sourceRoot":""}