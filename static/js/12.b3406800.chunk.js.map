{"version":3,"sources":["components/Produce/QueryForm.js","pages/Produce/Price.js"],"names":["create","form","queryItems","queryRecord","addRecord","batchRecord","deleteRecord","exportExcel","handleExport","validateFields","err","values","formButtons","text","handerClick","type","resetFields","itemCommonProps","handleBlur","e","setFieldsValue","target","id","value","trim","layout","formItems","renderTailPart","map","button","key","style","marginRight","onClick","className","moduleName","name","displayName","connect","state","price","dispatch","list","pageInfo","loading","useState","current","pageSize","showSizeChanger","showTotal","total","pagination","setPagination","queryParams","setQueryParams","useEffect","payload","pageNo","columns","title","dataIndex","render","moment","format","tip","spinning","size","dataSource","bordered","rowKey","onChange","curPageInfo"],"mappings":"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","file":"static/js/12.b3406800.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Form, Button } from 'antd'\r\n\r\nimport CommonForm from './CommonForm'\r\nimport './index.css'\r\n\r\nfunction QueryForm({ form, queryItems = [], queryRecord, addRecord, batchRecord, deleteRecord, exportExcel }) {\r\n  function query() {\r\n    form.validateFields((err, values) => {\r\n      if (err) {\r\n        return\r\n      }\r\n\r\n      queryRecord(values)\r\n    })\r\n  }\r\n\r\n  function handleExport() {\r\n    form.validateFields((err, values) => {\r\n      if (err) {\r\n        return\r\n      }\r\n\r\n      exportExcel(values)\r\n    })\r\n  }\r\n\r\n  function reset() {\r\n    form.resetFields()\r\n  }\r\n\r\n  const formButtons = [\r\n    {\r\n      text: '查询',\r\n      handerClick: query,\r\n      type: 'primary',\r\n    },\r\n    {\r\n      text: '重置',\r\n      handerClick: reset,\r\n    },\r\n  ]\r\n\r\n  const itemCommonProps = {\r\n    handleBlur: e => {\r\n      form.setFieldsValue({ [e.target.id]: e.target.value.trim() })\r\n    },\r\n  }\r\n\r\n  return (\r\n    <CommonForm\r\n      layout=\"inline\"\r\n      form={form}\r\n      formItems={queryItems}\r\n      itemCommonProps={itemCommonProps}\r\n      renderTailPart={() => (\r\n        <div>\r\n          {formButtons.map(button => (\r\n            <Button key={button.text} type={button.type} style={{ marginRight: 16 }} onClick={button.handerClick}>\r\n              {button.text}\r\n            </Button>\r\n          ))}\r\n          {addRecord && (\r\n            <Button type=\"primary\" style={{ marginRight: 16 }} onClick={addRecord}>\r\n              新增\r\n            </Button>\r\n          )}\r\n          {batchRecord && (\r\n            <Button className=\"btn-orange\" style={{ marginRight: 16 }} onClick={batchRecord}>\r\n              批量管理\r\n            </Button>\r\n          )}\r\n          {deleteRecord && (\r\n            <Button className=\"btn-orange\" style={{ marginRight: 16 }} onClick={deleteRecord}>\r\n              批量删除\r\n            </Button>\r\n          )}\r\n          {exportExcel && (\r\n            <Button className=\"btn-orange\" style={{ marginRight: 16 }} onClick={handleExport}>\r\n              导出Excel\r\n            </Button>\r\n          )}\r\n        </div>\r\n      )}\r\n    />\r\n  )\r\n}\r\n\r\nexport default Form.create()(QueryForm)\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Card, Table, Spin } from 'antd'\r\nimport { connect } from 'dva'\r\nimport moment from 'moment'\r\n\r\nimport QueryForm from '../../components/Produce/QueryForm'\r\n\r\nconst moduleName = 'price'\r\n\r\nconst queryItems = [\r\n  {\r\n    type: 'input',\r\n    name: 'flowId',\r\n    displayName: '工序ID',\r\n  },\r\n  {\r\n    type: 'input',\r\n    name: 'flowName',\r\n    displayName: '工序名称',\r\n  },\r\n]\r\n\r\nfunction Price({ dispatch, list, pageInfo, loading }) {\r\n  const [pagination, setPagination] = useState({\r\n    current: 1,\r\n    pageSize: 10,\r\n    showSizeChanger: true,\r\n    showTotal,\r\n  })\r\n  const [queryParams, setQueryParams] = useState({})\r\n\r\n  useEffect(() => {\r\n    dispatch({\r\n      type: `${moduleName}/fetchList`,\r\n      payload: {\r\n        pageNo: pagination.current,\r\n        pageSize: pagination.pageSize,\r\n      },\r\n    })\r\n  }, [dispatch, pagination])\r\n\r\n  function showTotal(total) {\r\n    return `共 ${total} 条记录`\r\n  }\r\n\r\n  function queryRecord(values) {\r\n    const payload = { ...values, pageNo: 1, pageSize: pagination.pageSize }\r\n    setQueryParams(payload)\r\n\r\n    dispatch({\r\n      type: `${moduleName}/fetchList`,\r\n      payload,\r\n    })\r\n  }\r\n\r\n  function tableChange(pageInfo) {\r\n    const curPageInfo = { ...pagination, ...pageInfo }\r\n    setPagination(curPageInfo)\r\n\r\n    const payload = {\r\n      ...queryParams,\r\n      pageNo: curPageInfo.current,\r\n      pageSize: curPageInfo.pageSize,\r\n    }\r\n    setQueryParams(payload)\r\n\r\n    dispatch({\r\n      type: `${moduleName}/fetchList`,\r\n      payload,\r\n    })\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      title: '工序ID',\r\n      dataIndex: 'flowId',\r\n      key: 'flowId',\r\n    },\r\n    {\r\n      title: '工序名称',\r\n      dataIndex: 'flowName',\r\n      key: 'flowName',\r\n    },\r\n    {\r\n      title: '工序历史价格',\r\n      dataIndex: 'price',\r\n      key: 'price',\r\n    },\r\n    {\r\n      title: '创建时间',\r\n      dataIndex: 'createTime',\r\n      key: 'createTime',\r\n      render: text => {\r\n        return moment(text).format('YYYY-MM-DD HH:mm:SS')\r\n      },\r\n    },\r\n    {\r\n      title: '修改时间',\r\n      dataIndex: 'updateTime',\r\n      key: 'updateTime',\r\n      render: text => {\r\n        return moment(text).format('YYYY-MM-DD HH:mm:SS')\r\n      },\r\n    },\r\n  ]\r\n\r\n  return (\r\n    <Card>\r\n      <QueryForm queryItems={queryItems} queryRecord={queryRecord} />\r\n      <Spin tip=\"努力加载中...\" spinning={loading.list}>\r\n        <Table\r\n          size=\"small\"\r\n          dataSource={list}\r\n          columns={columns}\r\n          bordered\r\n          rowKey=\"createTime\"\r\n          onChange={tableChange}\r\n          pagination={{ ...pagination, total: pageInfo.total }}\r\n        />\r\n      </Spin>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default connect(state => ({\r\n  ...state.price,\r\n}))(Price)\r\n"],"sourceRoot":""}