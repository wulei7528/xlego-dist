{"version":3,"sources":["components/Produce/InfoForm.js","pages/Produce/Company.js"],"names":["create","mapPropsToFields","props","record","result","Object","keys","forEach","key","createFormField","value","form","infoItems","modifyRecord","useState","onlyText","setOnlyText","buttonText","setButtonText","modify","validateFields","err","values","then","CommonForm","formItems","renderTailPart","type","style","marginRight","onClick","moduleName","name","displayName","connect","state","company","dispatch","useEffect","payload","id","cookies","get","data"],"mappings":"mOA0Ce,UAAKA,OAAO,CACzBC,iBADyB,SACRC,GAAQ,IAAD,EACEA,EAAhBC,cADc,MACL,GADK,EAEhBC,EAAS,GAQf,OANAC,OAAOC,KAAKH,GAAQI,SAAQ,SAAAC,GAC1BJ,EAAOI,GAAO,IAAKC,gBAAgB,CACjCC,MAAOP,EAAOK,QAIXJ,IAXI,EArCf,YAAmE,IAA/CO,EAA8C,EAA9CA,KAAMR,EAAwC,EAAxCA,OAAwC,IAAhCS,iBAAgC,MAApB,GAAoB,EAAhBC,EAAgB,EAAhBA,aAAgB,EAChCC,oBAAS,GADuB,mBACzDC,EADyD,KAC/CC,EAD+C,OAE5BF,mBAAS,4BAFmB,mBAEzDG,EAFyD,KAE7CC,EAF6C,KAIhE,SAASC,IACHJ,GACFG,EAAc,4BACdF,GAAaD,IAEbJ,EAAKS,gBAAe,SAACC,EAAKC,GACpBD,GAIJR,EAAaS,GAAQC,MAAK,WACxBP,GAAaD,GACbG,EAAc,kCAMtB,OACE,kBAACM,EAAA,EAAD,CACEb,KAAMA,EACNc,UAAWb,EACXT,OAAQA,EACRY,SAAUA,EACVW,eAAgB,kBACd,uBAAQC,KAAK,UAAUC,MAAO,CAAEC,YAAa,QAAUC,QAASX,GAC7DF,S,0kBC7BX,IAAMc,EAAa,UAEbnB,EAAY,CAChB,CACEe,KAAM,QACNK,KAAM,cACNC,YAAa,4BAEf,CACEN,KAAM,QACNK,KAAM,cACNC,YAAa,4BAEf,CACEN,KAAM,QACNK,KAAM,UACNC,YAAa,sBAEf,CACEN,KAAM,QACNK,KAAM,UACNC,YAAa,4BAEf,CACEN,KAAM,QACNK,KAAM,YACNC,YAAa,6BAsCFC,6BAAQ,SAAAC,GAAK,YACvBA,EAAMC,WADIF,EAlCf,YAAwC,IAArBG,EAAoB,EAApBA,SAAUlC,EAAU,EAAVA,OA2B3B,OA1BAmC,qBAAU,WACRD,EAAS,CACPV,KAAK,GAAD,OAAKI,EAAL,cACJQ,QAAS,CACPC,GAAIC,IAAQC,IAAI,kBAGnB,CAACL,IAoBF,2BACE,kBAAC,EAAD,CAAUzB,UAAWA,EAAWC,aAnBpC,SAAsBS,GACpB,IAAMiB,EAAO,KACRpC,EADQ,GAERmB,GAGL,OAAOe,EAAS,CACdV,KAAK,GAAD,OAAKI,EAAL,iBACJQ,YACChB,MAAK,SAAAoB,GACNN,EAAS,CACPV,KAAK,GAAD,OAAKI,EAAL,eACJQ,QAASI,EAAKA,WAO4CxC,OAAQA","file":"static/js/13.99a163a0.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport { Form, Button } from 'antd'\r\n\r\nimport CommonForm from './CommonForm'\r\n\r\nfunction InfoForm({ form, record, infoItems = [], modifyRecord }) {\r\n  const [onlyText, setOnlyText] = useState(true)\r\n  const [buttonText, setButtonText] = useState('编辑修改')\r\n\r\n  function modify() {\r\n    if (onlyText) {\r\n      setButtonText('完成修改')\r\n      setOnlyText(!onlyText)\r\n    } else {\r\n      form.validateFields((err, values) => {\r\n        if (err) {\r\n          return\r\n        }\r\n\r\n        modifyRecord(values).then(() => {\r\n          setOnlyText(!onlyText)\r\n          setButtonText('编辑修改')\r\n        })\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <CommonForm\r\n      form={form}\r\n      formItems={infoItems}\r\n      record={record}\r\n      onlyText={onlyText}\r\n      renderTailPart={() => (\r\n        <Button type=\"primary\" style={{ marginRight: '16px' }} onClick={modify}>\r\n          {buttonText}\r\n        </Button>\r\n      )}\r\n    />\r\n  )\r\n}\r\n\r\nexport default Form.create({\r\n  mapPropsToFields(props) {\r\n    const { record = {} } = props\r\n    const result = {}\r\n\r\n    Object.keys(record).forEach(key => {\r\n      result[key] = Form.createFormField({\r\n        value: record[key],\r\n      })\r\n    })\r\n\r\n    return result\r\n  },\r\n})(InfoForm)\r\n","import React, { useEffect } from 'react'\r\nimport { Card } from 'antd'\r\nimport { connect } from 'dva'\r\nimport InfoForm from '../../components/Produce/InfoForm'\r\nimport cookies from 'js-cookie'\r\n\r\nconst moduleName = 'company'\r\n\r\nconst infoItems = [\r\n  {\r\n    type: 'input',\r\n    name: 'companyName',\r\n    displayName: '公司名称',\r\n  },\r\n  {\r\n    type: 'input',\r\n    name: 'description',\r\n    displayName: '公司描述',\r\n  },\r\n  {\r\n    type: 'input',\r\n    name: 'contact',\r\n    displayName: '联系人',\r\n  },\r\n  {\r\n    type: 'input',\r\n    name: 'address',\r\n    displayName: '公司地址',\r\n  },\r\n  {\r\n    type: 'input',\r\n    name: 'telephone',\r\n    displayName: '联系电话',\r\n  },\r\n]\r\n\r\nfunction Company({ dispatch, record }) {\r\n  useEffect(() => {\r\n    dispatch({\r\n      type: `${moduleName}/getRecord`,\r\n      payload: {\r\n        id: cookies.get('companyId'),\r\n      },\r\n    })\r\n  }, [dispatch])\r\n\r\n  function modifyRecord(values) {\r\n    const payload = {\r\n      ...record,\r\n      ...values,\r\n    }\r\n\r\n    return dispatch({\r\n      type: `${moduleName}/updateRecord`,\r\n      payload,\r\n    }).then(data => {\r\n      dispatch({\r\n        type: `${moduleName}/saveRecord`,\r\n        payload: data.data,\r\n      })\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <InfoForm infoItems={infoItems} modifyRecord={modifyRecord} record={record} />\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default connect(state => ({\r\n  ...state.company,\r\n}))(Company)\r\n"],"sourceRoot":""}