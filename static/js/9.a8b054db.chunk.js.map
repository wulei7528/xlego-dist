{"version":3,"sources":["components/Produce/QueryForm.js","pages/Produce/Employee.js","pages/Produce/OrderList.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js","components/Produce/EditableTable.js","pages/Produce/BatchOrder.js","pages/Produce/Order.js"],"names":["create","form","queryItems","queryRecord","addRecord","batchRecord","deleteRecord","exportExcel","handleExport","validateFields","err","values","formButtons","text","handerClick","type","resetFields","itemCommonProps","handleBlur","e","setFieldsValue","target","id","value","trim","layout","formItems","renderTailPart","map","button","key","style","marginRight","onClick","className","moduleName","moduleCnName","name","displayName","selectOptions","options","initialValue","addItems","rules","required","message","radioOptions","connect","state","employee","dispatch","list","pageInfo","record","loading","pageRole","batchOrder","useState","modalVisible","setModalVisible","selectedRows","setSelectedRows","current","pageSize","showSizeChanger","showTotal","total","pagination","setPagination","queryParams","setQueryParams","formRef","useRef","records","length","ids","join","confirm","content","onOk","payload","then","refreshPage","okText","cancelText","error","useEffect","pageNo","rowSelection","onChange","_","columns","title","dataIndex","width","queryFormProps","push","render","1","2","moment","format","size","editRecord","margin","unshift","extProps","birthdate","ref","tip","spinning","bordered","rowKey","dataSource","curPageInfo","onCancel","visible","footer","saveRecord","placeholder","order","employeeList","flowList","flow","addFormRef","item","employeeName","props","showSearch","filterOption","input","option","children","toLowerCase","indexOf","flowName","handleChange","flowId","find","price","parseFloat","getFieldValue","cost","disabled","QueryForm","EditForm","employeeId","_classCallCheck","instance","Constructor","TypeError","_defineProperties","i","descriptor","enumerable","configurable","writable","Object","defineProperty","_createClass","protoProps","staticProps","prototype","_typeof2","obj","Symbol","iterator","constructor","_typeof","_possibleConstructorReturn","self","call","ReferenceError","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","_setPrototypeOf","p","_inherits","subClass","superClass","Option","EditableContext","React","createContext","EditableCell","getInput","inputChange","inputType","items","renderCell","getFieldDecorator","editing","index","displayText","restProps","Item","Consumer","this","Component","EditableTable","addRow","newCount","newData","setState","data","edit","startEdit","submitData","code","success","update","findIndex","splice","isNewRecord","toString","batchRemove","deletedRows","filter","row","forEach","selRow","batchDelete","updateKeyValues","keyValues","setClassName","seletedRows","components","body","cell","col","editable","onCell","getDisplayText","Provider","marginBottom","rowClassName","nextProps","prevState","EditableFormTable","batchModalVisible","setBatchModalVisible","curEmployee","setCurEmployee","curList","setCurList","Number","Employee","color","top","height","overflowY","companyId","cookies","get","copyItem","TabPane","Order","activeKey","setActiveKey","tabKey","tab"],"mappings":"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","file":"static/js/9.a8b054db.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Form, Button } from 'antd'\r\n\r\nimport CommonForm from './CommonForm'\r\nimport './index.css'\r\n\r\nfunction QueryForm({ form, queryItems = [], queryRecord, addRecord, batchRecord, deleteRecord, exportExcel }) {\r\n  function query() {\r\n    form.validateFields((err, values) => {\r\n      if (err) {\r\n        return\r\n      }\r\n\r\n      queryRecord(values)\r\n    })\r\n  }\r\n\r\n  function handleExport() {\r\n    form.validateFields((err, values) => {\r\n      if (err) {\r\n        return\r\n      }\r\n\r\n      exportExcel(values)\r\n    })\r\n  }\r\n\r\n  function reset() {\r\n    form.resetFields()\r\n  }\r\n\r\n  const formButtons = [\r\n    {\r\n      text: '查询',\r\n      handerClick: query,\r\n      type: 'primary',\r\n    },\r\n    {\r\n      text: '重置',\r\n      handerClick: reset,\r\n    },\r\n  ]\r\n\r\n  const itemCommonProps = {\r\n    handleBlur: e => {\r\n      form.setFieldsValue({ [e.target.id]: e.target.value.trim() })\r\n    },\r\n  }\r\n\r\n  return (\r\n    <CommonForm\r\n      layout=\"inline\"\r\n      form={form}\r\n      formItems={queryItems}\r\n      itemCommonProps={itemCommonProps}\r\n      renderTailPart={() => (\r\n        <div>\r\n          {formButtons.map(button => (\r\n            <Button key={button.text} type={button.type} style={{ marginRight: 16 }} onClick={button.handerClick}>\r\n              {button.text}\r\n            </Button>\r\n          ))}\r\n          {addRecord && (\r\n            <Button type=\"primary\" style={{ marginRight: 16 }} onClick={addRecord}>\r\n              新增\r\n            </Button>\r\n          )}\r\n          {batchRecord && (\r\n            <Button className=\"btn-orange\" style={{ marginRight: 16 }} onClick={batchRecord}>\r\n              批量管理\r\n            </Button>\r\n          )}\r\n          {deleteRecord && (\r\n            <Button className=\"btn-orange\" style={{ marginRight: 16 }} onClick={deleteRecord}>\r\n              批量删除\r\n            </Button>\r\n          )}\r\n          {exportExcel && (\r\n            <Button className=\"btn-orange\" style={{ marginRight: 16 }} onClick={handleExport}>\r\n              导出Excel\r\n            </Button>\r\n          )}\r\n        </div>\r\n      )}\r\n    />\r\n  )\r\n}\r\n\r\nexport default Form.create()(QueryForm)\r\n","import React, { useEffect, useState, useRef } from 'react'\r\nimport { Card, Table, Modal, Button, Spin, message } from 'antd'\r\nimport { connect } from 'dva'\r\nimport moment from 'moment'\r\n\r\nimport QueryForm from '../../components/Produce/QueryForm'\r\nimport EditForm from '../../components/Produce/EditForm'\r\n\r\nconst moduleName = 'employee'\r\nconst moduleCnName = '员工'\r\n\r\nconst queryItems = [\r\n  {\r\n    type: 'input',\r\n    name: 'id',\r\n    displayName: '车工ID',\r\n  },\r\n  {\r\n    type: 'input',\r\n    name: 'employeeName',\r\n    displayName: '车工姓名',\r\n  },\r\n  {\r\n    type: 'input',\r\n    name: 'telephone',\r\n    displayName: '联系电话',\r\n  },\r\n  {\r\n    type: 'select',\r\n    name: 'employeeRole',\r\n    displayName: '车工角色',\r\n    selectOptions: [\r\n      {\r\n        text: '全部',\r\n        value: '',\r\n      },\r\n      {\r\n        text: '普通车工',\r\n        value: '普通车工',\r\n      },\r\n      {\r\n        text: '熟手',\r\n        value: '熟手',\r\n      },\r\n    ],\r\n    options: {\r\n      initialValue: '',\r\n    },\r\n  },\r\n]\r\n\r\nconst addItems = [\r\n  {\r\n    type: 'input',\r\n    name: 'employeeName',\r\n    displayName: '车工姓名',\r\n    options: {\r\n      rules: [\r\n        {\r\n          required: true,\r\n          message: '请输入车工姓名',\r\n        },\r\n      ],\r\n    },\r\n  },\r\n  {\r\n    type: 'select',\r\n    name: 'employeeRole',\r\n    displayName: '车工角色',\r\n    selectOptions: [\r\n      {\r\n        text: '普通车工',\r\n        value: '普通车工',\r\n      },\r\n      {\r\n        text: '熟手',\r\n        value: '熟手',\r\n      },\r\n    ],\r\n    options: {\r\n      initialValue: '普通车工',\r\n    },\r\n  },\r\n  {\r\n    type: 'radio',\r\n    name: 'gender',\r\n    displayName: '性别',\r\n    radioOptions: [\r\n      {\r\n        text: '男',\r\n        value: 1,\r\n      },\r\n      {\r\n        text: '女',\r\n        value: 2,\r\n      },\r\n    ],\r\n    options: {\r\n      initialValue: 1,\r\n    },\r\n  },\r\n  {\r\n    type: 'datepicker',\r\n    name: 'birthdate',\r\n    displayName: '出生日期',\r\n  },\r\n  {\r\n    type: 'input',\r\n    name: 'telephone',\r\n    displayName: '联系电话',\r\n    options: {\r\n      rules: [\r\n        {\r\n          required: true,\r\n          message: '请输入车工联系电话',\r\n        },\r\n      ],\r\n    },\r\n  },\r\n]\r\n\r\nfunction Employee({ dispatch, list, pageInfo, record, loading, pageRole, batchOrder }) {\r\n  const [modalVisible, setModalVisible] = useState(false)\r\n  const [selectedRows, setSelectedRows] = useState([])\r\n  const [pagination, setPagination] = useState({\r\n    current: 1,\r\n    pageSize: 10,\r\n    showSizeChanger: true,\r\n    showTotal,\r\n  })\r\n  const [queryParams, setQueryParams] = useState({})\r\n  const formRef = useRef()\r\n\r\n  useEffect(() => {\r\n    dispatch({\r\n      type: `${moduleName}/fetchList`,\r\n      payload: {\r\n        pageNo: pagination.current,\r\n        pageSize: pagination.pageSize,\r\n      },\r\n    })\r\n  }, [dispatch, pagination])\r\n\r\n  // 查询\r\n  function queryRecord(values) {\r\n    const payload = { ...values, pageNo: 1, pageSize: pagination.pageSize }\r\n    setQueryParams(payload)\r\n\r\n    dispatch({\r\n      type: `${moduleName}/fetchList`,\r\n      payload,\r\n    })\r\n  }\r\n\r\n  function tableChange(pageInfo) {\r\n    const curPageInfo = { ...pagination, ...pageInfo }\r\n    setPagination(curPageInfo)\r\n\r\n    const payload = {\r\n      ...queryParams,\r\n      pageNo: curPageInfo.current,\r\n      pageSize: curPageInfo.pageSize,\r\n    }\r\n    setQueryParams(payload)\r\n\r\n    dispatch({\r\n      type: `${moduleName}/fetchList`,\r\n      payload,\r\n    })\r\n  }\r\n\r\n  // 新增&修改\r\n  function addRecord() {\r\n    setModalVisible(true)\r\n  }\r\n\r\n  function editRecord(record) {\r\n    dispatch({\r\n      type: `${moduleName}/getRecord`,\r\n      payload: {\r\n        id: record.id,\r\n      },\r\n    }).then(() => {\r\n      setModalVisible(true)\r\n    })\r\n  }\r\n\r\n  function saveRecord(values) {\r\n    const payload = { ...values, birthdate: values.birthdate.format('YYYY-MM-DD') }\r\n\r\n    dispatch({\r\n      type: `${moduleName}/updateRecord`,\r\n      payload,\r\n    }).then(() => {\r\n      setModalVisible(false)\r\n      refreshPage()\r\n    })\r\n  }\r\n\r\n  // 删除(支持批量)\r\n  function deleteRecord(records = []) {\r\n    if (!records.length) {\r\n      message.error('请选择至少一个删除选项')\r\n      return\r\n    }\r\n\r\n    const ids = records.map(record => record.id).join()\r\n\r\n    Modal.confirm({\r\n      content: `确认要删除${moduleCnName}`,\r\n      onOk: () => {\r\n        dispatch({\r\n          type: `${moduleName}/batchDelete`,\r\n          payload: {\r\n            type: 1,\r\n            ids,\r\n          },\r\n        }).then(() => refreshPage())\r\n      },\r\n      okText: '确认',\r\n      cancelText: '取消',\r\n    })\r\n  }\r\n\r\n  function handleCancel() {\r\n    dispatch({\r\n      type: `${moduleName}/saveRecord`,\r\n      payload: {},\r\n    })\r\n    setModalVisible(false)\r\n  }\r\n\r\n  function refreshPage() {\r\n    setPagination({ ...pagination, current: 1 })\r\n\r\n    dispatch({\r\n      type: `${moduleName}/saveRecord`,\r\n      payload: {},\r\n    })\r\n    formRef.current.resetFields()\r\n  }\r\n\r\n  function showTotal(total) {\r\n    return `共 ${total} 条记录`\r\n  }\r\n\r\n  const rowSelection = {\r\n    onChange: (_, selectedRows) => {\r\n      setSelectedRows(selectedRows)\r\n    },\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      title: '车工ID',\r\n      dataIndex: 'id',\r\n      key: 'id',\r\n      width: 100,\r\n    },\r\n    {\r\n      title: '车工姓名',\r\n      dataIndex: 'employeeName',\r\n      key: 'employeeName',\r\n      width: 120,\r\n    },\r\n    {\r\n      title: '车工角色',\r\n      dataIndex: 'employeeRole',\r\n      key: 'employeeRole',\r\n      width: 100,\r\n    },\r\n    {\r\n      title: '联系电话',\r\n      dataIndex: 'telephone',\r\n      key: 'telephone',\r\n      width: 160,\r\n    },\r\n  ]\r\n\r\n  const queryFormProps = {}\r\n\r\n  if (pageRole !== 'order') {\r\n    queryFormProps.addRecord = addRecord\r\n    queryFormProps.deleteRecord = () => deleteRecord(selectedRows)\r\n    columns.push(\r\n      ...[\r\n        {\r\n          title: '性别',\r\n          dataIndex: 'gender',\r\n          key: 'gender',\r\n          width: 60,\r\n          render: text => {\r\n            const valueMap = {\r\n              1: '男',\r\n              2: '女',\r\n            }\r\n\r\n            return valueMap[text]\r\n          },\r\n        },\r\n        {\r\n          title: '出生日期',\r\n          dataIndex: 'birthdate',\r\n          key: 'birthdate',\r\n          width: 120,\r\n        },\r\n        {\r\n          title: '创建时间',\r\n          dataIndex: 'createTime',\r\n          key: 'createTime',\r\n          width: 120,\r\n          render: text => {\r\n            return moment(text).format('YYYY-MM-DD HH:mm:SS')\r\n          },\r\n        },\r\n        {\r\n          title: '修改时间',\r\n          dataIndex: 'updateTime',\r\n          key: 'updateTime',\r\n          width: 120,\r\n          render: text => {\r\n            return moment(text).format('YYYY-MM-DD HH:mm:SS')\r\n          },\r\n        },\r\n        {\r\n          title: '操作',\r\n          dataIndex: 'operation',\r\n          key: 'operation',\r\n          width: 150,\r\n          render: (_, record) => {\r\n            return (\r\n              <>\r\n                <Button type=\"primary\" size=\"small\" onClick={() => editRecord(record)} style={{ margin: 5 }}>\r\n                  修改\r\n                </Button>\r\n                <Button type=\"primary\" size=\"small\" onClick={() => deleteRecord([record])}>\r\n                  删除\r\n                </Button>\r\n              </>\r\n            )\r\n          },\r\n        },\r\n      ]\r\n    )\r\n  } else {\r\n    columns.unshift({\r\n      title: '订单操作',\r\n      dataIndex: 'operation',\r\n      key: 'operation',\r\n      width: 100,\r\n      render: (_, record) => {\r\n        return (\r\n          <>\r\n            <Button type=\"primary\" size=\"small\" onClick={() => batchOrder(record)} style={{ marginRight: 10 }}>\r\n              管理订单\r\n            </Button>\r\n          </>\r\n        )\r\n      },\r\n    })\r\n    columns.push({})\r\n  }\r\n\r\n  const extProps = {}\r\n\r\n  if (pageRole !== 'order') {\r\n    extProps['rowSelection'] = rowSelection\r\n  }\r\n\r\n  record.birthdate = moment(record.birthdate)\r\n\r\n  return (\r\n    <Card>\r\n      <QueryForm ref={formRef} queryItems={queryItems} queryRecord={queryRecord} {...queryFormProps} />\r\n      <Spin tip=\"努力加载中...\" spinning={loading.list}>\r\n        <Table\r\n          size=\"small\"\r\n          bordered\r\n          rowKey=\"id\"\r\n          dataSource={list}\r\n          columns={columns}\r\n          onChange={tableChange}\r\n          pagination={{ ...pagination, total: pageInfo.total }}\r\n          {...extProps}\r\n        />\r\n      </Spin>\r\n      <Modal title={`编辑${moduleCnName}`} width={800} onCancel={handleCancel} visible={modalVisible} footer={null}>\r\n        <EditForm addItems={addItems} record={record} saveRecord={saveRecord} />\r\n      </Modal>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default connect(state => ({\r\n  ...state.employee,\r\n}))(Employee)\r\n","import React, { useEffect, useState, useRef } from 'react'\nimport { Card, Table, Modal, Button, Spin, message } from 'antd'\nimport { connect } from 'dva'\nimport moment from 'moment'\n\nimport QueryForm from '../../components/Produce/QueryForm'\nimport EditForm from '../../components/Produce/EditForm'\n\nconst moduleName = 'order'\nconst moduleCnName = '订单'\n\nconst queryItems = [\n  {\n    type: 'input',\n    name: 'id',\n    displayName: '订单ID',\n  },\n  {\n    type: 'input',\n    name: 'employeeName',\n    displayName: '车工姓名',\n    placeholder: '输入姓名或按字查找',\n  },\n  {\n    type: 'input',\n    name: 'flowName',\n    displayName: '工序名称',\n  },\n  // {\n  //   type: 'rangepicker',\n  //   name: 'createTime',\n  //   displayName: '创建时间',\n  // },\n  // {\n  //   type: 'rangepicker',\n  //   name: 'updateTime',\n  //   displayName: '修改时间',\n  // },\n]\n\nfunction OrderList({ dispatch, list, pageInfo, record, loading, employeeList, flowList }) {\n  const [modalVisible, setModalVisible] = useState(false)\n  const [selectedRows, setSelectedRows] = useState([])\n  const [pagination, setPagination] = useState({\n    current: 1,\n    pageSize: 10,\n    showSizeChanger: true,\n    showTotal,\n  })\n  const [queryParams, setQueryParams] = useState({})\n  const formRef = useRef()\n  const addFormRef = useRef()\n\n  useEffect(() => {\n    dispatch({\n      type: `${moduleName}/fetchList`,\n      payload: {\n        pageNo: pagination.current,\n        pageSize: pagination.pageSize,\n      },\n    })\n\n    dispatch({\n      type: `employee/fetchList`,\n      payload: {\n        pageNo: 1,\n        pageSize: 9999,\n      },\n    })\n\n    dispatch({\n      type: `flow/fetchList`,\n      payload: {\n        pageNo: 1,\n        pageSize: 9999,\n      },\n    })\n  }, [dispatch, pagination])\n\n  function queryRecord(values) {\n    const payload = { ...values, pageNo: 1, pageSize: pagination.pageSize }\n    setQueryParams(payload)\n\n    dispatch({\n      type: `${moduleName}/fetchList`,\n      payload,\n    })\n  }\n\n  function tableChange(pageInfo) {\n    const curPageInfo = { ...pagination, ...pageInfo }\n    setPagination(curPageInfo)\n\n    const payload = {\n      ...queryParams,\n      pageNo: curPageInfo.current,\n      pageSize: curPageInfo.pageSize,\n    }\n    setQueryParams(payload)\n\n    dispatch({\n      type: `${moduleName}/fetchList`,\n      payload,\n    })\n  }\n\n  function addRecord() {\n    dispatch({\n      type: `${moduleName}/saveRecord`,\n      payload: {},\n    })\n    setModalVisible(true)\n  }\n\n  function saveRecord(values) {\n    const { flowId, employeeId } = values\n\n    const payload = {\n      ...values,\n      flowId,\n      employeeId,\n    }\n\n    dispatch({\n      type: `${moduleName}/updateRecord`,\n      payload,\n    }).then(() => {\n      setModalVisible(false)\n      refreshPage()\n    })\n  }\n\n  function showTotal(total) {\n    return `共 ${total} 条记录`\n  }\n\n  function editRecord(record) {\n    dispatch({\n      type: `${moduleName}/getRecord`,\n      payload: {\n        id: record.id,\n      },\n    }).then(() => {\n      setModalVisible(true)\n    })\n  }\n\n  // 删除(支持批量)\n  function deleteRecord(records = []) {\n    if (!records.length) {\n      message.error('请选择至少一个删除选项')\n      return\n    }\n\n    const id = records.map(record => record.id).join()\n\n    Modal.confirm({\n      content: `确认要删除${moduleCnName}`,\n      onOk: () => {\n        dispatch({\n          type: `${moduleName}/batchDelete`,\n          payload: {\n            type: 4,\n            id,\n          },\n        }).then(() => refreshPage())\n      },\n      okText: '确认',\n      cancelText: '取消',\n    })\n  }\n\n  function refreshPage() {\n    setPagination({ ...pagination, current: 1 })\n\n    dispatch({\n      type: `${moduleName}/saveRecord`,\n      payload: {},\n    })\n    formRef.current.resetFields()\n  }\n\n  function handleCancel() {\n    setModalVisible(false)\n  }\n\n  const rowSelection = {\n    onChange: (_, selectedRows) => {\n      setSelectedRows(selectedRows)\n    },\n  }\n\n  function handleFlowChange(value) {\n    const form = addFormRef.current\n    const flowId = value\n    const flow = flowList.find(item => item.id === flowId)\n\n    const price = parseFloat(flow.price)\n    const size = parseFloat(form.getFieldValue('size') || 0)\n\n    form.setFieldsValue({ price })\n    form.setFieldsValue({ cost: price * size })\n  }\n\n  function handleSizeChange(value) {\n    const form = addFormRef.current\n    const price = parseFloat(form.getFieldValue('price'))\n    const size = parseFloat(value)\n\n    form.setFieldsValue({ cost: price * size })\n  }\n\n  const columns = [\n    {\n      title: '订单ID',\n      dataIndex: 'id',\n      key: 'id',\n    },\n    {\n      title: '车工姓名',\n      dataIndex: 'employeeName',\n      key: 'employeeName',\n    },\n    {\n      title: '工序名称',\n      dataIndex: 'flowName',\n      key: 'flowName',\n    },\n    {\n      title: '数量',\n      dataIndex: 'size',\n      key: 'size',\n    },\n    {\n      title: '工序价格',\n      dataIndex: 'price',\n      key: 'price',\n    },\n    {\n      title: '工序费用',\n      dataIndex: 'cost',\n      key: 'cost',\n    },\n    {\n      title: '创建时间',\n      dataIndex: 'createTime',\n      key: 'createTime',\n      render: text => {\n        return moment(text).format('YYYY-MM-DD HH:mm:ss')\n      },\n    },\n    {\n      title: '修改时间',\n      dataIndex: 'updateTime',\n      key: 'updateTime',\n      render: text => {\n        return moment(text).format('YYYY-MM-DD HH:mm:ss')\n      },\n    },\n    {\n      title: '操作',\n      dataIndex: 'operation',\n      key: 'operation',\n      render: (_, record) => {\n        return (\n          <>\n            <Button type=\"primary\" size=\"small\" onClick={() => editRecord(record)} style={{ marginRight: 10 }}>\n              修改\n            </Button>\n            <Button type=\"primary\" size=\"small\" onClick={() => deleteRecord([record])}>\n              删除\n            </Button>\n          </>\n        )\n      },\n    },\n  ]\n\n  const addItems = [\n    {\n      type: 'select',\n      name: 'employeeId',\n      displayName: '车工姓名',\n      options: {\n        rules: [\n          {\n            required: true,\n            message: '请输入车工姓名',\n          },\n        ],\n      },\n      selectOptions: employeeList.map(item => ({ value: item.id, text: item.employeeName })),\n      props: {\n        showSearch: true,\n        filterOption: (input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0,\n      },\n    },\n    {\n      type: 'select',\n      name: 'flowId',\n      displayName: '工序名称',\n      options: {\n        rules: [\n          {\n            required: true,\n            message: '请输入工序名称',\n          },\n        ],\n      },\n      selectOptions: flowList.map(item => ({ value: item.id, text: item.flowName })),\n      handleChange: handleFlowChange,\n      props: {\n        showSearch: true,\n        filterOption: (input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0,\n      },\n    },\n    {\n      type: 'input',\n      name: 'size',\n      displayName: '数量',\n      options: {\n        rules: [\n          {\n            required: true,\n            message: '请输入工序数量',\n          },\n        ],\n      },\n      handleChange: handleSizeChange,\n    },\n    {\n      type: 'input',\n      name: 'price',\n      displayName: '工序单价',\n      props: {\n        disabled: true,\n      },\n    },\n    {\n      type: 'input',\n      name: 'cost',\n      displayName: '工序费用',\n      props: {\n        disabled: true,\n      },\n    },\n  ]\n\n  return (\n    <Card>\n      <QueryForm\n        ref={formRef}\n        queryItems={queryItems}\n        queryRecord={queryRecord}\n        addRecord={addRecord}\n        deleteRecord={() => deleteRecord(selectedRows)}\n      />\n      <Spin tip=\"努力加载中...\" spinning={loading.list}>\n        <Table\n          size=\"small\"\n          dataSource={list}\n          columns={columns}\n          rowSelection={rowSelection}\n          bordered\n          rowKey=\"id\"\n          onChange={tableChange}\n          pagination={{ ...pagination, total: pageInfo.total }}\n        />\n      </Spin>\n      <Modal title={`编辑${moduleCnName}`} width={800} onCancel={handleCancel} visible={modalVisible} footer={null}>\n        <EditForm addItems={addItems} record={record} saveRecord={saveRecord} ref={addFormRef} />\n      </Modal>\n    </Card>\n  )\n}\n\nexport default connect(state => ({\n  ...state.order,\n  employeeList: state.employee.list,\n  flowList: state.flow.list,\n}))(OrderList)\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","function _typeof2(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nexport default function _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}","import _typeof from \"../../helpers/esm/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","import React from 'react'\nimport { Table, Input, Select, Form, Button, message } from 'antd'\n\nconst { Option } = Select\nconst EditableContext = React.createContext()\n\nclass EditableCell extends React.Component {\n  getInput = ({ inputChange }) => {\n    const { inputType, disabled, items } = this.props\n\n    if (inputType === 'select') {\n      return (\n        <Select style={{ width: 200 }} onChange={inputChange}>\n          {items.map(item => (\n            <Option value={item.value} key={item.value}>\n              {item.text}\n            </Option>\n          ))}\n        </Select>\n      )\n    }\n    return <Input disabled={disabled} onChange={e => inputChange(e.target.value)} />\n  }\n\n  renderCell = form => {\n    const { getFieldDecorator } = form\n    const { editing, dataIndex, title, inputType, record, index, children, inputChange, displayText, ...restProps } = this.props\n\n    return (\n      <td {...restProps}>\n        {editing ? (\n          <Form.Item style={{ margin: 0 }}>\n            {getFieldDecorator(`${record.id}-${dataIndex}`, {\n              rules: [\n                {\n                  required: true,\n                  message: `Please Input ${title}!`,\n                },\n              ],\n              initialValue: record[dataIndex],\n            })(this.getInput({ inputChange }))}\n          </Form.Item>\n        ) : (\n          displayText || children\n        )}\n      </td>\n    )\n  }\n\n  render() {\n    return <EditableContext.Consumer>{this.renderCell}</EditableContext.Consumer>\n  }\n}\n\nclass EditableTable extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { data: [], props, edit: false, newCount: 0, seletedRows: [] }\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const { props } = prevState\n\n    if (nextProps.list !== props.list) {\n      return {\n        edit: false,\n        data: nextProps.list,\n        props: {\n          list: nextProps.list,\n        },\n      }\n    }\n\n    return null\n  }\n\n  addRow = () => {\n    const { newCount } = this.state\n    const newData = { id: `new-${newCount}` }\n\n    this.setState({\n      newCount: newCount + 1,\n      data: [newData, ...this.state.data],\n      edit: true,\n    })\n  }\n\n  startEdit = () => {\n    const { data, edit } = this.state\n    const { form, submitData } = this.props\n\n    if (!data || !data.length) {\n      message.error('请先添加记录再提交')\n\n      return\n    }\n\n    if (edit) {\n      form.validateFields((error, value) => {\n        if (error) {\n          message.error('字段存在错误', error)\n          return\n        }\n\n        submitData(data).then(data => {\n          if (!data.code) {\n            message.success('保存成功')\n            this.setState({ data: data.data, edit: !edit })\n          } else {\n            message.error('保存失败')\n          }\n        })\n      })\n    } else {\n      this.setState({ edit: !edit })\n    }\n  }\n\n  update = (id, key, value) => {\n    const newData = [...this.state.data]\n    const index = newData.findIndex(item => id === item.id)\n    if (index > -1) {\n      const item = newData[index]\n      newData.splice(index, 1, {\n        ...item,\n        [key]: value,\n      })\n      this.setState({ data: newData })\n    }\n  }\n\n  isNewRecord = record => {\n    const { id = 'new' } = record\n\n    return id.toString().indexOf('new') === 0\n  }\n\n  batchRemove = () => {\n    const { selectedRows = [], data } = this.state\n    const deletedRows = selectedRows.filter(row => !this.isNewRecord(row))\n\n    if (deletedRows.length === 0) {\n      if (selectedRows.length) {\n        selectedRows.forEach(selRow => {\n          const index = data.find(item => item.id === selRow.id)\n\n          data.splice(index, 1)\n        })\n\n        this.setState({ data })\n\n        return\n      }\n\n      message.error('请选择至少一条待删除记录')\n      return\n    }\n\n    this.props.batchDelete(deletedRows)\n  }\n\n  updateKeyValues = (id, keyValues) => {\n    const newData = [...this.state.data]\n    const index = newData.findIndex(item => id === item.id)\n    if (index > -1) {\n      const item = newData[index]\n      newData.splice(index, 1, {\n        ...item,\n        ...keyValues,\n      })\n      this.setState({ data: newData })\n    } else {\n      newData.push({})\n      this.setState({ data: newData })\n    }\n  }\n\n  setClassName = (record, index) => {\n    return this.props.setClassName && this.props.setClassName(record, index)\n  }\n\n  render() {\n    const components = {\n      body: {\n        cell: EditableCell,\n      },\n    }\n\n    const columns = this.props.columns.map(col => {\n      if (!col.editable) {\n        return col\n      }\n      return {\n        ...col,\n        onCell: record => ({\n          record,\n          inputType: col.inputType,\n          dataIndex: col.dataIndex,\n          title: col.title,\n          editing: this.state.edit,\n          items: col.items,\n          disabled: col.disabled || false,\n          displayText: col.getDisplayText && col.getDisplayText(record),\n          inputChange: value => {\n            if (col.inputChange) {\n              col.inputChange({\n                form: this.props.form,\n                record,\n                value,\n                update: this.updateKeyValues,\n              })\n            } else {\n              this.update(record.id, col.dataIndex, value)\n            }\n          },\n        }),\n      }\n    })\n\n    const rowSelection = {\n      onChange: (_, selectedRows) => {\n        this.setState({ selectedRows })\n      },\n    }\n\n    return (\n      <EditableContext.Provider value={this.props.form}>\n        <div style={{ marginBottom: 10 }}>\n          <Button type=\"primary\" style={{ marginRight: 16 }} onClick={this.addRow}>\n            新增一行\n          </Button>\n          <Button type=\"primary\" style={{ marginRight: 16 }} onClick={this.startEdit}>\n            {this.state.edit ? '提交订单' : '修改订单'}\n          </Button>\n          <Button type=\"danger\" onClick={this.batchRemove}>\n            批量删除\n          </Button>\n        </div>\n        <Table\n          rowSelection={rowSelection}\n          components={components}\n          bordered\n          size=\"small\"\n          dataSource={this.state.data}\n          columns={columns}\n          rowClassName=\"editable-row\"\n          pagination={this.props.pagination}\n          onChange={this.props.onChange}\n          rowKey=\"id\"\n        />\n      </EditableContext.Provider>\n    )\n  }\n}\n\nconst EditableFormTable = Form.create()(EditableTable)\n\nexport default EditableFormTable\n","import React, { useState } from 'react'\nimport { Modal, message } from 'antd'\nimport { connect } from 'dva'\nimport cookies from 'js-cookie'\n\nimport Employee from './Employee'\nimport EditableTable from '../../components/Produce/EditableTable'\n\nimport './index.css'\n\nconst moduleName = 'order'\nconst moduleCnName = '订单'\n\nfunction BatchOrder({ dispatch, flowList }) {\n  const [batchModalVisible, setBatchModalVisible] = useState(false)\n  const [curEmployee, setCurEmployee] = useState({})\n  const [curList, setCurList] = useState([])\n  const [pagination, setPagination] = useState({\n    current: 1,\n    pageSize: 9999,\n    // showSizeChanger: true,\n    showTotal,\n  })\n\n  function handleBatchCancel() {\n    setBatchModalVisible(false)\n  }\n\n  function batchOrder(employee) {\n    setBatchModalVisible(true)\n    setCurEmployee(employee)\n\n    dispatch({\n      type: `${moduleName}/fetchList`,\n      payload: {\n        employeeId: employee.id,\n        pageNo: pagination.current,\n        pageSize: pagination.pageSize,\n      },\n    }).then(data => {\n      setCurList(data.data || [])\n    })\n  }\n\n  function tableChange(pageInfo) {\n    const curPageInfo = { ...pagination, ...pageInfo }\n    setPagination(curPageInfo)\n\n    const payload = {\n      employeeId: curEmployee.id,\n      pageNo: curPageInfo.current,\n      pageSize: curPageInfo.pageSize,\n    }\n\n    dispatch({\n      type: `${moduleName}/fetchList`,\n      payload,\n    })\n  }\n\n  function showTotal(total) {\n    return `共 ${total} 条记录`\n  }\n\n  function submitData(data) {\n    const companyId = cookies.get('companyId')\n    const payload = data.map(item => {\n      const copyItem = { ...item }\n\n      if (item.id.toString().indexOf('new') === 0) {\n        copyItem.id = null\n        copyItem.companyId = companyId\n        copyItem.employeeId = curEmployee.id\n      }\n\n      delete copyItem.employeeName\n      delete copyItem.flowName\n\n      return copyItem\n    })\n\n    return dispatch({\n      type: `${moduleName}/orderbatch`,\n      payload,\n    })\n  }\n\n  // 删除(支持批量)\n  function batchDelete(records = []) {\n    if (!records.length) {\n      message.error('请选择至少一个删除选项')\n      return\n    }\n\n    const id = records.map(record => record.id).join()\n\n    Modal.confirm({\n      content: `确认要删除${moduleCnName}`,\n      onOk: () => {\n        dispatch({\n          type: `${moduleName}/batchDelete`,\n          payload: {\n            type: 4,\n            id,\n          },\n        }).then(() => {\n          dispatch({\n            type: `${moduleName}/fetchList`,\n            payload: {\n              employeeId: curEmployee.id,\n            },\n          }).then(data => {\n            setCurList(data.data || [])\n          })\n        })\n      },\n      okText: '确认',\n      cancelText: '取消',\n    })\n  }\n\n  function setClassName(record) {\n    return record.id && record.id.toString().indexOf('new') === 0 ? 'row-add' : ''\n  }\n\n  const columns = [\n    {\n      title: '订单ID',\n      dataIndex: 'id',\n      key: 'id',\n      render: (_, record) => {\n        return record.id && record.id.toString().indexOf('new') === 0 ? '新订单' : record.id\n      },\n    },\n    {\n      title: '工序名称',\n      dataIndex: 'flowId',\n      key: 'flowId',\n      editable: true,\n      inputType: 'select',\n      getDisplayText: record => (flowList.find(item => item.id === record.flowId) || {}).flowName,\n      items: flowList.map(item => ({ value: item.id, text: item.flowName })),\n      inputChange: ({ form, record, value, update }) => {\n        const price = (flowList.find(item => item.id === value) || {}).price\n        const size = record.size || 0\n        const cost = size * price\n        form.setFieldsValue({ [`${record.id}-price`]: price })\n        form.setFieldsValue({ [`${record.id}-cost`]: cost })\n\n        update(record.id, {\n          flowId: value,\n          price,\n          cost,\n        })\n      },\n    },\n    {\n      title: '工序价格',\n      dataIndex: 'price',\n      key: 'price',\n      editable: true,\n      disabled: true,\n    },\n    {\n      title: '数量',\n      dataIndex: 'size',\n      key: 'size',\n      editable: true,\n      inputChange: ({ form, record, value, update }) => {\n        const size = value >= 0 ? value : 0\n        const price = Number(record.price) || 0\n        const cost = size * price\n        form.setFieldsValue({ [`${record.id}-cost`]: cost })\n\n        update(record.id, {\n          size,\n          cost,\n        })\n      },\n    },\n    {\n      title: '工序费用',\n      dataIndex: 'cost',\n      key: 'cost',\n      editable: true,\n      disabled: true,\n    },\n  ]\n\n  return (\n    <>\n      <Employee pageRole=\"order\" batchOrder={batchOrder} />\n      <Modal\n        title={\n          <div>\n            管理<span style={{ color: 'red' }}>{curEmployee.employeeName}</span>的订单\n          </div>\n        }\n        width={1200}\n        style={{ top: 30 }}\n        onCancel={handleBatchCancel}\n        visible={batchModalVisible}\n        footer={null}\n      >\n        <div style={{ height: 400, overflowY: 'auto' }}>\n          <EditableTable\n            list={curList}\n            columns={columns}\n            rowKey=\"id\"\n            setClassName={setClassName}\n            submitData={submitData}\n            batchDelete={batchDelete}\n            onChange={tableChange}\n            pagination={pagination}\n          />\n        </div>\n      </Modal>\n    </>\n  )\n}\n\nexport default connect(state => ({\n  employeeList: state.employee.list,\n  flowList: state.flow.list,\n}))(BatchOrder)\n","import React, { useState } from 'react'\r\nimport { Tabs } from 'antd'\r\n\r\nimport OrderList from './OrderList'\r\nimport BatchOrder from './BatchOrder'\r\n\r\nconst { TabPane } = Tabs\r\n\r\nfunction Order() {\r\n  const [activeKey, setActiveKey] = useState('1')\r\n\r\n  function tabChange(tabKey) {\r\n    setActiveKey(tabKey)\r\n  }\r\n\r\n  return (\r\n    <Tabs onChange={tabChange}>\r\n      <TabPane tab=\"订单列表\" key=\"1\">\r\n        {activeKey === '1' && <OrderList />}\r\n      </TabPane>\r\n      <TabPane tab=\"批量订单管理\" key=\"2\">\r\n        {activeKey === '2' && <BatchOrder />}\r\n      </TabPane>\r\n    </Tabs>\r\n  )\r\n}\r\n\r\nexport default Order\r\n"],"sourceRoot":""}